create table zespoły (ID_zespołu int not null auto_increment primary key, nazwa_zespołu VARCHAR(30) unique, rok_założenia YEAR, liczba_członków int(15) not null, wytwórnia VARCHAR(20));
create table wykonawcy (ID_wykonawcy int not null auto_increment primary key, pseudonim VARCHAR(30) unique, imię VARCHAR(15), nazwisko VARCHAR(20), data_ur DATE, wiek int, zespół VARCHAR(30), wytwórnia VARCHAR(20));
create table albumy (ID_albumu int not null auto_increment primary key, nazwa_albumu VARCHAR(40) unique, autor VARCHAR(30), rok_wydania YEAR, liczba_utworów int, constraint fk_albumy_zespołów foreign key (autor) references zespoły(nazwa_zespołu));
create table wytwórnie (ID_wytwórni int not null auto_increment primary key, nazwa_wytwórni VARCHAR(20) unique);
create table albumy_solowe (ID_albumu int not null auto_increment primary key, nazwa_albumu VARCHAR(40) unique, autor VARCHAR(30), rok_wydania YEAR, liczba_utworów int, constraint fk_albumy_solowe foreign key (autor) references wykonawcy(pseudonim));
create table utwory_zespołów (ID_utworu int not null auto_increment primary key, nazwa_utworu VARCHAR(50), autor VARCHAR(30), album VARCHAR(40), constraint fk_utwory_zespołów foreign key (autor) references zespoły(nazwa_zespołu), constraint fk_albumy_zespołów2 foreign key (album) references albumy(nazwa_albumu));
create table utwory_solowe (ID_utworu int not null auto_increment primary key, nazwa_utworu VARCHAR(50), autor VARCHAR(30), album VARCHAR(40), constraint fk_utwory_solowe foreign key (autor) references wykonawcy(pseudonim), constraint fk_albumy_solowe2 foreign key (album) references albumy_solowe(nazwa_albumu));
alter table zespoły add constraint fk_wytwórnie_zespoły foreign key (wytwórnia) references wytwórnie(nazwa_wytwórni);
alter table wykonawcy add constraint fk_zespoły foreign key (zespół) references zespoły(nazwa_zespołu);
alter table wykonawcy add constraint fk_wytwórnie foreign key (wytwórnia) references wytwórnie(nazwa_wytwórni);
insert into wytwórnie (nazwa_wytwórni) values ("QueQuality"), ("Magic Records"), ("Big Hit"), ("Parlophone"), ("Disruptor"), ("Antihype"), ("Sony Music"), ("2020"), ("Interscope Records"), ("Dualtone Records");
insert into zespoły (nazwa_zespołu, rok_założenia, liczba_członków, wytwórnia) values 
("Imagine Dragons", 2008, 4, "Interscope Records"), 
("BTS", 2013, 7, "Big Hit"), 
("Coldplay", 1996, 5, "Parlophone"), 
("The Lumineers", 2005, 2, "Dualtone Records"), 
("The Chainsmokers", 2012, 2, "Disruptor");
insert into wykonawcy (pseudonim, imię, nazwisko, data_ur, wiek, zespół, wytwórnia) values 
(null, "Dan", "Reynolds", '1987-08-14', YEAR(CURDATE())-year(data_ur), "Imagine Dragons", "Interscope Records"),
(null, "Wayne ", "Sermon", '1984-07-15', YEAR(CURDATE())-year(data_ur), "Imagine Dragons", "Interscope Records"),
(null, "Ben", "McKee", '1985-04-07', YEAR(CURDATE())-year(data_ur), "Imagine Dragons", "Interscope Records"),
(null, "Daniel", "Platzman", '1986-09-28', YEAR(CURDATE())-year(data_ur), "Imagine Dragons", "Interscope Records"),
(null, "Wesley", "Schultz", '1982-12-30', YEAR(CURDATE())-year(data_ur), "The Lumineers", "Dualtone Records"),
(null, "Jeremiah", "Fraites", '1986-01-17', YEAR(CURDATE())-year(data_ur), "The Lumineers", "Dualtone Records"),
("Quebonafide", "Kuba", "Grabowski", '1991-07-07', YEAR(CURDATE())-year(data_ur), null, "QueQuality"),
("sanah", "Zuzanna", "Jurczak", '1997-09-02', YEAR(CURDATE())-year(data_ur), null, "Magic Records"),
("Jungkook", "Jeon", "Jung-kook", '1997-09-01', YEAR(CURDATE())-year(data_ur), "BTS", "Big Hit"),
("V", "Kim", "Tae-hyung", '1995-12-30', YEAR(CURDATE())-year(data_ur), "BTS", "Big Hit"),
(null, "Chris", "Martin", '1977-03-2', YEAR(CURDATE())-year(data_ur), "Coldplay", "Parlophone"),
(null, "Andrew", "Taggart", '1989-12-31', YEAR(CURDATE())-year(data_ur), "The Chainsmokers", "Disruptor"),
(null, "Alex", "Pall", '1985-05-16', YEAR(CURDATE())-year(data_ur), "The Chainsmokers", "Disruptor"),
("Sarius", "Mariusz", "Golling", '1992-01-12', YEAR(CURDATE())-year(data_ur), null, "Antihype"),
(null, "Daria", "Zawiałow", '1992-08-18', YEAR(CURDATE())-year(data_ur), null, "Sony Music"),
("Jimin", "Park", "Ji-min", '1995-09-13', YEAR(CURDATE())-year(data_ur), "BTS", "Big Hit"),
("RM", "Kim", "Nam-joon", '1994-12-12', YEAR(CURDATE())-year(data_ur), "BTS", "Big Hit"),
("J-Hope", "Jung", "Ho-seok", '1994-02-18', YEAR(CURDATE())-year(data_ur), "BTS", "Big Hit"),
("Suga", "Min", "Yoon-gi", '1993-03-09', YEAR(CURDATE())-year(data_ur), "BTS", "Big Hit"),
("Jin", "Kim", "Seok-jin", '1992-12-04', YEAR(CURDATE())-year(data_ur), "BTS", "Big Hit"),
(null, "Chris", "Martin", '1977-03-02', YEAR(CURDATE())-year(data_ur), "Coldplay", "Parlophone"),
(null, "Jonny", "Buckland", '1977-09-11', YEAR(CURDATE())-year(data_ur), "Coldplay", "Parlophone"),
(null, "Guy", "Berryman", '1978-04-12', YEAR(CURDATE())-year(data_ur), "Coldplay", "Parlophone"),
(null, "Will", "Champion", '1978-07-31', YEAR(CURDATE())-year(data_ur), "Coldplay", "Parlophone"),
("Taco Hemingway", "Filip", "Szcześniak",'1990-07-29', YEAR(CURDATE())-year(data_ur), null, "2020");
insert into albumy (nazwa_albumu, autor, rok_wydania, liczba_utworów) values
("The Lumineers", "The Lumineers", 2012, 11),
("Smoke + Mirrors", "Imagine Dragons", 2015, 13),
("Evolve", "Imagine Dragons", 2017, 11),
("Love Yourself: Tear", "BTS", 2018, 11),
("Wings", "BTS", 2016, 15),
("Sick Boy", "The Chainsmokers", 2018, 23),
("X&Y", "Coldplay", 2005, 13);
insert into albumy_solowe (nazwa_albumu, autor, rok_wydania, liczba_utworów) values
("Królowa Dram", "sanah", 2020, 13),
("Antihype", "Sarius", 2018, 17),
("Pierwszy dzień po końcu świata", "Sarius", 2019, 11),
("Romantic Psycho", "Quebonafide", 2020, 16),
("Jarmark", "Taco Hemingway", 2020, 12),
("Europa", "Taco Hemingway", 2020, 13),
("Cafe Belga", "Taco Hemingway", 2018, 11);
insert into utwory_solowe (nazwa_utworu, autor, album) values
("Romantic Psycho", "Quebonafide", "Romantic Psycho"),
("Jesień", "Quebonafide", "Romantic Psycho"),
("Przytobie", "Quebonafide", "Romantic Psycho"),
("Szubienicapestycydybroń", "Quebonafide", "Romantic Psycho"),
("Tęskniezastarymkanye", "Quebonafide", "Romantic Psycho"),
("Aspartam", "Quebonafide", "Romantic Psycho"),
("Cojestmałpy", "Quebonafide", "Romantic Psycho"),
("Rumpelstilskin", "Quebonafide", "Romantic Psycho"),
("Gazprom", "Quebonafide", "Romantic Psycho"),
("Świattomójplaczabaw", "Quebonafide", "Romantic Psycho"),
("Ajetlagtomójnowydrag", "Quebonafide", "Romantic Psycho"),
("Tokyo2020", "Quebonafide", "Romantic Psycho"),
("Niepłaczęponotredame", "Quebonafide", "Romantic Psycho"),
("Łajza", "Quebonafide", "Romantic Psycho"),
("Bubbletea", "Quebonafide", "Romantic Psycho"),
("Towszytskobyłodlaciebie", "Quebonafide", "Romantic Psycho"),
("Początek", "sanah", "Królowa Dram"),
("Królowa dram", "sanah", "Królowa Dram"),
("To ja, a nie inna", "sanah", "Królowa Dram"),
("Siebie zapytasz", "sanah", "Królowa Dram"),
("Melodia", "sanah", "Królowa Dram"),
("Szampan", "sanah", "Królowa Dram"),
("Łezki me", "sanah", "Królowa Dram"),
("Proszę", "sanah", "Królowa Dram"),
("Proszę pana", "sanah", "Królowa Dram"),
("Oto cała ja", "sanah", "Królowa Dram"),
("2/10", "sanah", "Królowa Dram"),
("Sama", "sanah", "Królowa Dram"),
("Koniec", "sanah", "Królowa Dram"),
("Cafe Belga", "Taco Hemingway", "Cafe Belga"),
("ZTM", "Taco Hemingway", "Cafe Belga"),
("Wszystko na niby", "Taco Hemingway", "Cafe Belga"),
("Reżyseria: Kubrick", "Taco Hemingway", "Cafe Belga"),
("2031", "Taco Hemingway", "Cafe Belga"),
("Fiji", "Taco Hemingway", "Cafe Belga"),
("Abonent jest czasowo niedostępny", "Taco Hemingway", "Cafe Belga"),
("Motorola", "Taco Hemingway", "Cafe Belga"),
("Modigliani", "Taco Hemingway", "Cafe Belga"),
("Adieu", "Taco Hemingway", "Cafe Belga"),
("4 AM in Girona", "Taco Hemingway", "Cafe Belga");
insert into utwory_zespołów (nazwa_utworu, autor, album) values
("Intro: Singularity", "BTS", "Love Yourself: Tear"),
("FAKE LOVE", "BTS", "Love Yourself: Tear"),
("Jeonhaji motan jinsim", "BTS", "Love Yourself: Tear"),
("134340", "BTS", "Love Yourself: Tear"),
("Nagwon", "BTS", "Love Yourself: Tear"),
("Love Maze", "BTS", "Love Yourself: Tear"),
("Magic Shop", "BTS", "Love Yourself: Tear"),
("Airplane pt. 2", "BTS", "Love Yourself: Tear"),
("Anpanman", "BTS", "Love Yourself: Tear"),
("So What", "BTS", "Love Yourself: Tear"),
("Outro: Tear", "BTS", "Love Yourself: Tear"),
("I Don't Know Why", "Imagine Dragons", "Evolve"),
("Whatever it takes", "Imagine Dragons", "Evolve"),
("Believer", "Imagine Dragons", "Evolve"),
("Walking the Wire", "Imagine Dragons", "Evolve"),
("Rise Up", "Imagine Dragons", "Evolve"),
("I'll Make It Up to You", "Imagine Dragons", "Evolve"),
("Yesterday", "Imagine Dragons", "Evolve"),
("Mouth of the River", "Imagine Dragons", "Evolve"),
("Thunder", "Imagine Dragons", "Evolve"),
("Start Over", "Imagine Dragons", "Evolve"),
("Dancing in the Dark", "Imagine Dragons", "Evolve"),
("Shots", "Imagine Dragons", "Smoke + Mirrors"),
("Gold", "Imagine Dragons", "Smoke + Mirrors"),
("Smoke and Mirrors", "Imagine Dragons", "Smoke + Mirrors"),
("I'm So Sorry", "Imagine Dragons", "Smoke + Mirrors"),
("I Bet My Life", "Imagine Dragons", "Smoke + Mirrors"),
("Polaroid", "Imagine Dragons", "Smoke + Mirrors"),
("Friction", "Imagine Dragons", "Smoke + Mirrors"),
("It Comes Back to You", "Imagine Dragons", "Smoke + Mirrors"),
("Dream", "Imagine Dragons", "Smoke + Mirrors"),
("Trouble", "Imagine Dragons", "Smoke + Mirrors"),
("Summer", "Imagine Dragons", "Smoke + Mirrors"),
("Hopeless Opus", "Imagine Dragons", "Smoke + Mirrors"),
("The Fall", "Imagine Dragons", "Smoke + Mirrors"),
("This Feeling", "The Chainsmokers", "Sick Boy"),
("Beach House", "The Chainsmokers", "Sick Boy"),
("Hope", "The Chainsmokers", "Sick Boy"),
("Somebody", "The Chainsmokers", "Sick Boy"),
("Side Effects", "The Chainsmokers", "Sick Boy"),
("Sick Boy", "The Chainsmokers", "Sick Boy"),
("Everybody Hates Me", "The Chainsmokers", "Sick Boy"),
("Siren", "The Chainsmokers", "Sick Boy"),
("You Owe Me", "The Chainsmokers", "Sick Boy"),
("Save Yourself", "The Chainsmokers", "Sick Boy"),
("Square One", "Coldplay", "X&Y"),
("What If", "Coldplay", "X&Y"),
("White Shadows", "Coldplay", "X&Y"),
("Fix You", "Coldplay", "X&Y"),
("Talk", "Coldplay", "X&Y"),
("X&Y", "Coldplay", "X&Y"),
("Speed of Sound", "Coldplay", "X&Y"),
("A Message", "Coldplay", "X&Y"),
("Low", "Coldplay", "X&Y"),
("The Hardest Part", "Coldplay", "X&Y"),
("Swallowed in the Sea", "Coldplay", "X&Y"),
("Twisted Logic", "Coldplay", "X&Y"),
("Til Kingdom Come", "Coldplay", "X&Y"),
("Flowers in Your Hair", "The Lumineers", "The Lumineers"),
("Classy Girls", "The Lumineers", "The Lumineers"),
("Submarines", "The Lumineers", "The Lumineers"),
("Dead Sea", "The Lumineers", "The Lumineers"),
("Ho Hey", "The Lumineers", "The Lumineers"),
("Slow It Down", "The Lumineers", "The Lumineers"),
("Stubborn Love", "The Lumineers", "The Lumineers"),
("Big Parade", "The Lumineers", "The Lumineers"),
("Charlie Boy", "The Lumineers", "The Lumineers"),
("Flapper Girl", "The Lumineers", "The Lumineers"),
("Morning Song", "The Lumineers", "The Lumineers");
create table archiwum (ID_utworu int not null auto_increment primary key, nazwa_utworu VARCHAR(50), autor VARCHAR(30), album VARCHAR(40), data_usunięcia DATE);
delete from utwory_solowe WHERE id_utworu=40;
insert into utwory_solowe (nazwa_utworu, autor, album) values
("test123", "Taco Hemingway", "Cafe Belga");